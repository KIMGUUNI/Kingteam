package question;

import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;

public class Question {
	// 색깔변수
	public static final String RESET = "\u001B[0m";
	public static final String BACKGROUND_YELLOW = "\u001B[43m";
	public static final String FONT_RED = "\u001B[31m";
	public static final String FONT_YELLOW = "\u001B[33m";

	Scanner sc = new Scanner(System.in);
	Random rd = new Random();
	private int index;
	private String question;

	public Question() {

	}

	public Question(int index, String question) {
		super();
		this.index = index;
		this.question = question;
	}

	public int getIndex() {
		return index;
	}

	public void setIndex(int index) {
		this.index = index;
	}

	public String getQuestion() {
		return question;
	}

	public void setQuestion(String question) {
		this.question = question;
	}

	public void insertQ(ArrayList<Question> qList) {
		qList.add(new Question(0, "내가 좋아하는 사람 만나기 VS 나를 좋아해주는 사람 만나기"));
		qList.add(new Question(1, "육체적 바람 VS 정신적 바람"));
		qList.add(new Question(2, "환승이별 VS 잠수이별"));
		qList.add(new Question(3, "단톡방 고백 VS 길거리 공개고백"));
		qList.add(new Question(4, "나한테 돈 잘 쓰는데 빚 10억 VS 나한테 돈 안쓰는데 재산 10억"));
		qList.add(new Question(5, "평생 사람많은 핫플에서만 데이트 VS 평생 집에서만 데이트"));
		qList.add(new Question(6, "매일봐도 설레는 연애 VS 친구같이 편안한 연애"));
		qList.add(new Question(7, "나 빼고 연락하는 사람 한명도 없는 애인 VS 톡 알람이 멈추지 않는 애인"));
		qList.add(new Question(8, "스킨십 없이 대화만 하기 VS 대화없이 스킨십만하기"));
		qList.add(new Question(9, "콜라인줄알고마신 간장 VS 사과주스인줄 알고 마신 식초"));
		qList.add(new Question(10, "100%확률로 1억 VS 50프로확률로10억"));
		qList.add(new Question(11, "찍먹 VS 부먹"));
		qList.add(new Question(12, "회에 캐첩 찍어먹기 VS 감자튀김에 간장 찍어먹기"));
		qList.add(new Question(13, "큐트 VS 섹시"));
		qList.add(new Question(14, "평생 피자꼬다리만 먹기 VS 평생 치킨목만 먹기"));
		qList.add(new Question(15, "머리카락 없는 애인 VS 머리속이 텅빈 애인"));
		qList.add(new Question(16, "전여친 sns염탐하는 애인 VS 인플루언서 덕질하며 댓글까지 다는애인"));
		qList.add(new Question(17, "하루에 한번 VS 분기에 한번"));
		qList.add(new Question(18, "모태솔로 VS 10명넘게만난연애고수"));
		qList.add(new Question(19, "오이케이크 VS 김치케이크"));
		qList.add(new Question(20, "몸 VS 얼굴"));
		qList.add(new Question(21, "부드럽게 VS 거칠게"));
		qList.add(new Question(22, "친구의 전애인과 사귀기 VS 전애인의 친구와 사귀기"));
		qList.add(new Question(23, "주량 소주다섯병 VS 주량 다섯방울"));
		qList.add(new Question(24, "말없이키갈 VS 물어보고키갈"));
		qList.add(new Question(25, "5분마다연락하기 VS 하루에5번연락하기"));
		qList.add(new Question(26, "맨날정장 VS 맨날추리닝"));
		qList.add(new Question(27, "연상(동갑포함) VS 연하"));
		qList.add(new Question(28, "속궁합 VS 식궁합"));
		qList.add(new Question(29, "민초 VS 반민초"));
		qList.add(new Question(30, "가슴 VS 엉덩이"));
		qList.add(new Question(31, "몸섹 VS 뇌섹"));
		qList.add(new Question(32, "집착심한 애인 VS 애정표현 없는 애인"));
		qList.add(new Question(33, "10년지기 이성친구 1명 VS 가끔 안부 묻는 이성친구 10명"));
		qList.add(new Question(34, "삼겹살에 소주  VS 파전에 막걸리"));
		qList.add(new Question(35, "물복 VS 딱복"));
		qList.add(new Question(36, "소주 VS 맥주"));
		qList.add(new Question(37, "아침 VS 밤"));
		qList.add(new Question(38, "s VS m"));
		qList.add(new Question(39, "첫경험자 VS 다수경험자"));
	}

//	public void showTutorial() {
//		System.out.println("          ❤❤❤❤❤                ❤❤❤❤❤");
//		System.out.println("         ❤❤❤❤❤❤❤            ❤❤❤❤❤❤❤");
//		System.out.println("     ❤❤❤❤❤❤❤❤❤❤❤     ❤❤❤❤❤❤❤❤❤❤❤");
//		System.out.println("   ❤❤❤❤❤❤❤❤❤❤❤❤❤  ❤❤❤❤❤❤❤❤❤❤❤❤❤");
//		System.out.println("❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤");
//		System.out.println("❤❤❤❤ A.몸은 상남자, 마음은 여린 남자와의 화끈하고 야릇한 데이트❤❤❤");
//		System.out.println();
//		System.out.println("❤❤❤ B.어리다고 무시하지마라 연하남의 풋풋함과 박력에 빠지는 데이트❤❤❤");
//		System.out.println();
//		System.out.println("❤❤❤❤ C.모델같은 남자와의 영화같은 하루를 보낼수있는 황홀 데이트❤❤❤❤");
//		System.out.println();
//		System.out.println("❤❤❤❤❤ D.주변사람에게 너 다가졌네 들을수 있는 만수르 데이트❤❤❤❤❤");
//		System.out.println();
//		System.out.println("❤❤❤❤❤ E.통통튀는 매력으로 어디로 튈지 모르는 탱탱볼 데이트❤❤❤❤❤");
//		System.out.println();
//		System.out.println("❤❤❤❤❤ F.술에 취한건지 상대방에 취한건지 모르겠는 몽롱데이트❤❤❤❤❤");
//		System.out.println("❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤");
//		System.out.println("   ❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤");
//		System.out.println("      ❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤");
//		System.out.println("          ❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤");
//		System.out.println("               ❤❤❤❤❤❤❤❤❤❤❤❤❤");
//		System.out.println("                     ❤❤❤❤❤❤");
//		System.out.println("                        ❤❤❤");
//		System.out.println("                          ❤");
//
//	}
	public void showTutorial() {
		System.out.println("         ♥♥♥♥♥♥♥♥♥                    ♥♥♥♥♥♥♥♥♥");
		System.out.println("       ♥♥♥♥♥♥♥♥♥♥♥♥             ♥♥♥♥♥♥♥♥♥♥♥♥");
		System.out.println("     ♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥      ♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥");
		System.out.println("  ♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥  ♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥");
		System.out.println(" ♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥");
		System.out.println("♥♥♥♥♥ A.몸은 상남자, 마음은 여린 남자와의 화끈하고 야릇한 데이트 ♥♥♥♥");
		System.out.println();
		System.out.println("♥♥♥♥♥ B.어리다고 무시하지마라 연하남의 풋풋함과 박력에 빠지는 데이트 ♥♥");
		System.out.println();
		System.out.println("♥♥♥♥♥ C.모델같은 남자와의 영화같은 하루를 보낼수있는 황홀 데이트 ♥♥♥♥");
		System.out.println();
		System.out.println("♥♥♥♥♥ D.주변사람에게 너 다가졌네 들을수 있는 만수르 데이트 ♥♥♥♥♥♥");
		System.out.println();
		System.out.println("♥♥♥♥♥ E.통통튀는 매력으로 어디로 튈지 모르는 탱탱볼 데이트 ♥♥♥♥♥");
		System.out.println();
		System.out.println("   ♥♥♥ F.술에 취한건지 상대방에 취한건지 모르겠는 몽롱데이트 ♥♥♥");
		System.out.println("      ♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥");
		System.out.println("         ♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥");
		System.out.println("           ♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥");
		System.out.println("               ♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥");
		System.out.println("                 ♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥");
		System.out.println("                    ♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥");
		System.out.println("                         ♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥");
		System.out.println("                            ♥♥♥♥♥♥♥♥♥♥♥");

	}

	public void run2() {
		char[][] data = {
				{ 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 77, 77, 77, 77, 77, 77, 77, 77, 77, 32,
						32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
						77, 77, 77, 77, 77, 77, 77, 77, 77 },
				{ 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77,
						77, 77, 77, 77, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 77, 77, 77, 77, 77,
						77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77 },
				{ 32, 32, 32, 32, 32, 32, 32, 32, 77, 77, 77, 77, 77, 77, 77, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
						77, 77, 77, 77, 77, 77, 77, 32, 32, 32, 32, 32, 32, 32, 32, 32, 77, 77, 77, 77, 77, 77, 77, 88,
						88, 88, 88, 88, 88, 88, 88, 88, 88, 77, 77, 77, 77, 77, 77, 77 },
				{ 32, 32, 32, 32, 32, 77, 77, 77, 77, 77, 77, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
						88, 88, 88, 77, 77, 77, 77, 77, 77, 32, 32, 32, 32, 32, 77, 77, 77, 77, 77, 77, 88, 88, 88, 88,
						88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 77, 77, 77, 77, 77, 77 },
				{ 32, 32, 32, 32, 77, 77, 77, 77, 77, 88, 88, 88, 88, 88, 88, 88, 88, 79, 79, 79, 79, 79, 79, 79, 79,
						88, 88, 88, 88, 88, 88, 77, 77, 77, 77, 32, 32, 32, 77, 77, 77, 77, 88, 88, 88, 88, 88, 88, 79,
						79, 79, 79, 79, 79, 79, 79, 88, 88, 88, 88, 88, 88, 88, 88, 77, 77, 77, 77, 77 },
				{ 32, 32, 32, 77, 77, 77, 77, 88, 88, 88, 88, 88, 88, 88, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
						79, 79, 79, 79, 88, 88, 88, 88, 77, 77, 77, 32, 77, 77, 77, 88, 88, 88, 88, 79, 79, 79, 79, 79,
						79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 88, 88, 88, 88, 88, 88, 88, 77, 77, 77, 77 },
				{ 32, 32, 77, 77, 77, 77, 88, 88, 88, 88, 88, 88, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
						79, 79, 79, 79, 79, 79, 79, 88, 88, 88, 77, 77, 77, 88, 88, 88, 79, 79, 79, 79, 79, 79, 79, 79,
						79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 88, 88, 88, 88, 88, 88, 77, 77, 77, 77 },
				{ 32, 32, 77, 77, 77, 88, 88, 88, 88, 88, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
						79, 79, 79, 79, 79, 79, 79, 79, 79, 88, 88, 88, 88, 88, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
						79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 88, 88, 88, 88, 88, 77, 77, 77 },
				{ 32, 77, 77, 77, 88, 88, 88, 88, 88, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 32, 32, 32, 32, 32,
						32, 32, 79, 79, 79, 79, 79, 79, 79, 79, 79, 88, 79, 79, 79, 79, 79, 79, 79, 79, 79, 32, 32, 32,
						32, 32, 32, 32, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 88, 88, 88, 88, 77, 77, 77 },
				{ 32, 77, 77, 77, 88, 88, 88, 88, 79, 79, 79, 79, 79, 79, 79, 79, 79, 32, 32, 32, 32, 32, 32, 32, 32,
						32, 32, 32, 32, 32, 32, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 32, 32, 32, 32, 32, 32, 32,
						32, 32, 32, 32, 32, 32, 32, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 88, 88, 88, 77, 77, 77 },
				{ 32, 77, 77, 77, 88, 88, 88, 88, 79, 79, 79, 79, 79, 79, 79, 79, 32, 32, 32, 32, 32, 32, 32, 32, 32,
						32, 32, 32, 32, 32, 32, 32, 32, 32, 79, 79, 79, 79, 79, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
						32, 32, 32, 32, 32, 32, 32, 32, 79, 79, 79, 79, 79, 79, 79, 79, 79, 88, 88, 88, 77, 77, 77 },
				{ 32, 77, 77, 77, 88, 88, 88, 88, 79, 79, 79, 79, 79, 79, 79, 32, 32, 32, 32, '지', 32, '금', 32, '부', 32,
						'터', 32, 32, 32, 32, 32, 32, 79, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, '펼', 32, '쳐', 32, '질',
						32, 32, 32, 32, 79, 79, 79, 79, 79, 79, 79, 79, 88, 88, 88, 77, 77, 77 },
				{ 32, 77, 77, 77, 88, 88, 88, 88, 79, 79, 79, 79, 79, 79, 79, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
						32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
						32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 79, 79, 79, 79, 79, 79, 79, 79, 88, 88, 88, 77, 77,
						77 },
				{ 32, 77, 77, 77, 88, 88, 88, 88, 79, 79, 79, 79, 79, 79, 79, 32, 32, 32, 32, 32, 32, '너', 32, '와', 32,
						32, '나', 32, '의', 32, 32, '운', 32, '명', 32, '의', 32, 32, '시', 32, '작', 32, '점', 32, 32, 32, 32,
						32, 32, 32, 79, 79, 79, 79, 79, 79, 79, 79, 88, 88, 88, 77, 77, 77 },
				{ 32, 77, 77, 77, 88, 88, 88, 88, 88, 79, 79, 79, 79, 79, 79, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
						32, 32, 32, 32, 32, 32, 32, 46, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 46, 32, 32, 32, 32, 32,
						32, 32, 32, 32, 32, 32, 32, 32, 32, 48, 48, 48, 48, 79, 79, 79, 88, 88, 88, 88, 77, 77, 77 },
				{ 32, 32, 77, 77, 77, 88, 88, 88, 88, 79, 79, 79, 79, 79, 79, 79, 32, 32, 32, 32, 32, 32, 32, 32, 32,
						32, 32, 32, 32, 32, 44, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 44, 90, 90, 90,
						90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 79, 79, 79, 79, 88, 88, 88, 77, 77, 77 },
				{ 32, 32, 77, 77, 77, 77, 88, 88, 88, 88, 79, 79, 79, 79, 79, 79, 79, 32, 32, 32, 32, 32, 32, 32, 32,
						32, 32, 32, 44, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 41, 41, 41, 59, 59, 40, 40, 40, 44,
						44, 59, 59, 59, 44, 44, 95, 90, 90, 90, 90, 90, 90, 79, 79, 88, 88, 88, 77, 77, 77, 77 },
				{ 32, 32, 32, 77, 77, 77, 88, 88, 88, 88, 79, 79, 79, 79, 79, 79, 79, 79, 32, 32, 32, 32, 32, 32, 32,
						32, 32, 44, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 39, 32, 32, 32, 32, 32, 32, 124, 41, 41, 41,
						41, 41, 41, 41, 41, 41, 41, 41, 92, 92, 32, 32, 32, 77, 77, 77, 77, 77, 77, 77, 77 },
				{ 32, 32, 32, 77, 77, 77, 77, 88, 88, 88, 88, 79, 79, 79, 79, 79, 79, 79, 79, 32, 32, 32, 32, 32, 32,
						32, 32, 59, 59, 59, 59, 59, 59, 47, 32, 41, 39, 39, 32, 32, 32, 32, 45, 32, 47, 44, 41, 41, 41,
						40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 92, 32, 32, 77, 77, 77, 77, 77, 77, 77 },
				{ 32, 32, 32, 32, 77, 77, 77, 88, 88, 88, 88, 88, 79, 79, 79, 79, 79, 79, 79, 32, 32, 32, 32, 32, 32,
						32, 32, 59, 59, 59, 59, 39, 32, 92, 32, 32, 32, 32, 32, 32, 32, 32, 126, 124, 92, 32, 32, 41,
						41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 32, 77, 77, 77, 77, 77, 77, 77 },
				{ 32, 32, 32, 32, 32, 77, 77, 77, 88, 88, 88, 88, 88, 79, 79, 79, 79, 79, 79, 32, 32, 32, 32, 32, 32,
						32, 32, 47, 32, 32, 32, 32, 32, 47, 32, 32, 32, 32, 32, 32, 32, 32, 32, 124, 32, 32, 32, 40, 40,
						40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 32, 77, 77, 77, 77, 77, 77 },
				{ 32, 32, 32, 32, 32, 32, 77, 77, 77, 88, 88, 88, 88, 88, 79, 79, 79, 79, 79, 32, 32, 32, 32, 32, 32,
						47, 39, 32, 32, 32, 32, 32, 32, 92, 32, 32, 32, 32, 32, 32, 95, 47, 126, 39, 32, 32, 32, 32, 39,
						41, 124, 40, 41, 41, 41, 41, 41, 41, 41, 41, 41, 32, 77, 77, 77, 77, 77 },
				{ 32, 32, 32, 32, 32, 32, 32, 77, 77, 77, 88, 88, 88, 88, 88, 79, 79, 79, 79, 32, 32, 32, 32, 47, 39,
						32, 32, 32, 32, 32, 32, 32, 32, 32, 96, 92, 32, 32, 32, 47, 62, 32, 32, 32, 32, 32, 32, 95, 47,
						41, 41, 41, 40, 40, 40, 40, 40, 40, 40, 40, 32, 77, 77, 77, 77 },
				{ 32, 32, 32, 32, 32, 32, 32, 32, 77, 77, 77, 88, 88, 88, 88, 88, 88, 79, 79, 32, 32, 32, 47, 32, 32,
						32, 32, 32, 77, 69, 32, 32, 32, 47, 39, 32, 96, 126, 126, 40, 95, 95, 95, 95, 32, 47, 32, 32,
						40, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 32, 77, 77, 77 },
				{ 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 77, 77, 77, 88, 88, 88, 88, 88, 88, 32, 32, 124, 32, 32, 32,
						32, 32, 45, 45, 45, 44, 32, 32, 32, 92, 32, 32, 32, 32, 32, 32, 32, 32, 92, 32, 32, 32, 32, 32,
						40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 32, 77, 77, 77 },
				{ 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 77, 77, 77, 88, 88, 88, 88, 32, 32, 32, 32, 32, 32,
						32, 32, 32, 32, 32, 32, 96, 92, 32, 32, 32, 92, 126, 45, 95, 95, 95, 95, 95, 124, 32, 89, 79,
						85, 32, 32, 41, 41, 41, 41, 41, 41, 41, 41, 32, 77, 77 },
				{ 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 77, 77, 77, 77, 88, 32, 32, 32, 32, 32, 32,
						32, 32, 32, 32, 32, 32, 32, 32, 32, 96, 92, 32, 32, 124, 32, 32, 32, 32, 32, 32, 124, 95, 46,
						45, 45, 45, 46, 32, 32, 92, 32, 77, 77, 77, 77 },
				{ 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 77, 77, 77, 77, 88, 88, 88, 88,
						88, 88, 88, 88, 88, 88, 88, 79, 79, 79, 79, 79, 79, 79, 79, 79, 88, 88, 88, 88, 88, 88, 88, 88,
						88, 88, 77, 77, 77, 77, 77 },
				{ 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 77, 77, 77, 77, 77,
						88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 79, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 77,
						77, 77, 77, 77 },
				{ 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 77, 77,
						77, 77, 77, 77, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 77, 77, 77, 77, 77,
						77 },
				{ 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
						32, 32, 77, 77, 77, 77, 77, 77, 88, 88, 88, 88, 88, 88, 88, 77, 77, 77, 77, 77, 77 },
				{ 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
						32, 32, 32, 32, 32, 32, 77, 77, 77, 77, 77, 88, 77, 77, 77, 77, 77 },
				{ 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
						32, 32, 32, 32, 32, 32, 32, 32, 32, 77, 77, 77, 77, 77 },
				{ 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
						32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 77, 77, 77, 32, 32, 32 },
				{ 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
						32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 77 } };
		boolean direction = false;
		System.out.println();
		for (int i = 0; i < data.length; i++) {
			try {
				direction = !direction;
				if (direction) {
					for (int x = 0; x < data[i].length; x++) {
						Thread.sleep(1);
						System.out.print(data[i][x]);
					}
				} else {
					for (int x = 0; x < data[i].length; x++) {
						for (int y = 0; y < x; y++) {
							System.out.print("");
						}
						Thread.sleep(1);
						System.out.print(data[i][x]);
					}
				}

				System.out.println();

			} catch (InterruptedException ex) {
				ex.printStackTrace();
			}
		}
	}

	public void run() {
		byte[][] data = {
				{ 111, 111, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
						32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32 },
				{ 32, 32, 32, 111, 111, 32, 32, 32, 32, 32, 79, 79, 79, 79, 79, 79, 79, 79, 58, 32, 32, 32, 32, 32, 32,
						32, 79, 79, 79, 79, 79, 79, 79, 79, 33, 32, 32, 32, 32, 32, 32, 32 },
				{ 32, 32, 32, 32, 32, 32, 111, 79, 79, 79, 79, 33, 33, 33, 33, 59, 59, 59, 59, 79, 32, 32, 32, 32, 79,
						79, 46, 46, 46, 46, 46, 46, 46, 58, 59, 33, 79, 32, 32, 32, 32, 32 },
				{ 32, 32, 32, 32, 32, 39, 79, 79, 79, 33, 33, 33, 59, 59, 59, 59, 59, 59, 59, 59, 79, 32, 32, 79, 46,
						46, 46, 46, 46, 46, 46, 58, 32, 32, 32, 59, 33, 79, 32, 32, 32, 32 },
				{ 32, 32, 32, 32, 32, 79, 79, 79, 33, 33, 33, 33, 59, 59, 58, 58, 58, 58, 58, 58, 46, 79, 79, 46, 46,
						46, 46, 46, 46, 46, 46, 58, 32, 32, 32, 32, 59, 33, 79, 32, 32, 32 },
				{ 32, 32, 32, 32, 32, 79, 79, 33, 33, 33, 33, 59, 59, 58, 58, 58, 58, 58, 46, 46, 46, 46, 46, 46, 46,
						46, 46, 46, 46, 46, 46, 46, 58, 32, 32, 32, 59, 33, 79, 32, 32, 32 },
				{ 32, 32, 32, 32, 32, 79, 79, 79, 33, 33, 33, 59, 58, 58, 58, 58, 58, 58, 46, 46, 46, 46, 46, 46, 46,
						46, 46, 46, 46, 46, 46, 46, 58, 32, 32, 32, 59, 33, 79, 32, 32, 32 },
				{ 32, 32, 32, 32, 32, 32, 79, 79, 33, 33, 59, 59, 58, 58, 58, 58, 58, 58, 46, 46, 46, 46, 46, 46, 46,
						46, 46, 46, 46, 46, 46, 58, 32, 32, 32, 59, 33, 79, 32, 32, 32, 32 },
				{ 32, 32, 32, 32, 32, 32, 32, 79, 79, 33, 59, 59, 58, 58, 58, 58, 58, 58, 46, 46, 46, 46, 46, 46, 111,
						111, 46, 46, 46, 46, 46, 58, 58, 58, 58, 33, 79, 32, 32, 32, 32, 32 },
				{ 32, 32, 32, 32, 32, 32, 32, 32, 32, 79, 33, 33, 59, 58, 58, 58, 58, 58, 58, 46, 46, 46, 46, 46, 46,
						46, 46, 111, 111, 46, 46, 58, 58, 58, 79, 32, 32, 32, 32, 32, 32, 32 },
				{ 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 33, 33, 33, 59, 58, 58, 58, 58, 58, 46, 46, 46, 46, 46,
						46, 46, 46, 46, 46, 111, 111, 79, 32, 32, 32, 32, 32, 32, 32, 32, 32 },
				{ 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 33, 33, 59, 58, 58, 58, 58, 58, 46, 46, 46,
						46, 46, 46, 46, 79, 32, 32, 32, 111, 111, 32, 32, 32, 32, 32, 32, 32 },
				{ 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 59, 59, 58, 58, 58, 58, 46, 46, 46,
						46, 46, 79, 32, 32, 32, 32, 32, 32, 32, 32, 111, 111, 32, 32, 44, 111 },
				{ 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 58, 58, 46, 46, 79,
						32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 111, 111, 111 },
				{ 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 58, 46, 32,
						32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 111, 111, 111, 111 },
				{ 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 32,
						32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32 } };
		for (int i = 0; i < data.length; i++) {
			try {
				String decoded = new String(data[i], "UTF-8");
				System.out.println(decoded);
				try {
					Thread.sleep(1);
				} catch (InterruptedException ex) {
					ex.printStackTrace();
				}
			} catch (UnsupportedEncodingException ex) {
				ex.printStackTrace();
			}
		}
	}

}
